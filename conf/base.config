/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    phagetech/anubis Nextflow base config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    A 'blank slate' config file, appropriate for general use on most high performance
    compute environments. Assumes that all software is installed and available on
    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
----------------------------------------------------------------------------------------
*/

process {

    // Defaults for all processes
    cpus   = { 1    * task.attempt, 'cpus'   }
    memory = { 6.GB * task.attempt, 'memory' }
    time   = { 4.h  * task.attempt, 'time'   }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 2
    maxErrors     = '-1'

    // Process-specific resource requirements
    withLabel:process_single {
        cpus   = { 1                  , 'cpus'    }
        memory = { 8.GB * task.attempt, 'memory'  }
        time   = { 4.h  * task.attempt, 'time'    }
    }
    withLabel:process_low {
        cpus   = { 2     * task.attempt, 'cpus'    }
        memory = { 8.GB  * task.attempt, 'memory'  }
        time   = { 4.h   * task.attempt, 'time'    }
    }

    withLabel:process_low_medium {
        cpus   = { 4     * task.attempt, 'cpus'    }
        memory = { 8.GB  * task.attempt, 'memory'  }
        time   = { 6.h   * task.attempt, 'time'    }
    }

    withLabel:process_medium {
        cpus   = { 8     * task.attempt, 'cpus'    }
        memory = { 16.GB * task.attempt, 'memory'  }
        time   = { 8.h   * task.attempt, 'time'    }
    }

    withLabel:process_medium_high {
        cpus   = { 12     * task.attempt, 'cpus'    }
        memory = { 16.GB  * task.attempt, 'memory'  }
        time   = { 16.h   * task.attempt, 'time'    }
    }

    withLabel:process_high {
        cpus   = { 32     * task.attempt, 'cpus'    }
        memory = { 16.GB  * task.attempt, 'memory'  }
        time   = { 16.h   * task.attempt, 'time'    }
    }
    withLabel:process_long {
        time   = { 20.h  * task.attempt, 'time'    }
    }
    withLabel:process_high_memory {
        cpus   = { 32     * task.attempt, 'cpus'    }
        memory = { 96.GB * task.attempt, 'memory' }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
    withLabel:error_retry_ignore {
        errorStrategy = { task.attempt <= maxRetries  ? 'retry' : 'ignore' }
        maxRetries    = 2
    }
}
